# Namespace
---
apiVersion: v1
kind: Namespace
metadata:
  name: p6-adapter
  labels:
    name: p6-adapter


# ConfigMap
---
apiVersion: v1
data:
  P6_ADAPTER_PORT: "8080"
  P6_ENCRYPTION_KEY: h!ge98E*FHJk3w&$
  P6_HOSTNAME: p6-prd-mw
  P6_IP_ADDRESS: 10.53.20.38
kind: ConfigMap
metadata:
  labels:
    app: app
  name: env
  namespace: p6-adapter

# Persistent Volume
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-pv
  namespace: p6-adapter
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

# Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: p6-adapter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
        - env:
            - name: P6_ADAPTER_PORT
              valueFrom:
                configMapKeyRef:
                  key: P6_ADAPTER_PORT
                  name: env
            - name: P6_ENCRYPTION_KEY
              valueFrom:
                configMapKeyRef:
                  key: P6_ENCRYPTION_KEY
                  name: env
            - name: P6_HOSTNAME
              valueFrom:
                configMapKeyRef:
                  key: P6_HOSTNAME
                  name: env
            - name: P6_IP_ADDRESS
              valueFrom:
                configMapKeyRef:
                  key: P6_IP_ADDRESS
                  name: env
          image: ${CI_REGISTRY}/${CI_REGISTRY_PATH}:adapter-dev-latest
          imagePullPolicy: Always
          name: app
          ports:
            - containerPort: 8080
          resources: 
            limits:
              cpu: 0.25m
              memory: 100Mi
          volumeMounts:
            - mountPath: /var/app/sqlite
              name: app-pv
      restartPolicy: Always
      volumes:
        - name: app-pv
          persistentVolumeClaim:
            claimName: app-pv

# Service
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: app
  name: app-ingress
  namespace: p6-adapter
spec:
  ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
  selector:
    app: app



# Ingress
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  namespace: p6-adapter
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_clear_headers "strict-transport-security";
      more_clear_headers "x-content-type-options";
      more_clear_headers "x-frame-options";
      more_clear_headers "content-security-policy";
      proxy_set_header X-Forwarded-Proto https;
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
  spec:
  rules:
    - host: p6-adapter.azuredev.inl.gov
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: 
                port:
                  number: 8080
